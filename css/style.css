/*
Colors used:
(Black): #1c1c1c;
(White): #fff;
(Grey): #7f7f7f;
(Acquamarine): #00a3bd;
*/

/* Layout styling */

* {
  box-sizing: border-box;
}

.container {
  padding: 0 15px;
}

.container .center {
  display: block;
  max-width: 1280px;
  margin: 3rem auto;
}

.row {
  margin: 25px 0;
}

.logo {
  max-width: 150px;
  display: inline-block;
}

.prototype {
  width: 100%;
  display: inline-block;
  float: left;
}

.profile {
  max-width: 250px;
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.profile .image {
  border-radius: 50%;
  width: 250px;
  height: 250px;
  overflow: hidden;
  box-shadow: #9f9f9f 2px 4px 8px;
}

.project {
  margin: 25px 0;
}

header {
  background-color: #00a3bd;
  position: fixed;
  padding: 20px 0;
  width: 100%;
  transition: 0.4s;
  box-shadow: 4px 4px 9px 0 rgba(50, 50, 50, 0.32);
}

.navtoggle li:not(:last-child) {
  display: none;
}

.navtoggle,
.navtoggle.responsive {
  position: relative;
}

.navtoggle li .icon {
  position: absolute;
  padding-right: 0;
  right: 0;
  top: -3px;
  font-size: 20px;
}

.navtoggle.responsive nav {
  padding: 24px 0 0;
}

.navtoggle.responsive li {
  display: block;
  padding: 10px 0;
  border-top: 1px solid rgb(255, 255, 255, 0.3);
}

.navtoggle.responsive li:last-child {
  padding: 0 0 14px;
}

nav > ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
  text-align: center;
}

nav > ul > li > a {
  font-weight: 600;
  color: #1c1c1c;
  display: block;
}

nav > ul > li > a:hover {
  color: #fff;
  text-decoration: none;
}

footer#contact > div .contact > h2 {
  margin-top: 15px;
  margin-bottom: 15px;
}

footer#contact > div .contact > p {
  margin-top: 0;
  margin-bottom: 0;
}

footer#contact > div .contact > span {
  margin-bottom: 0;
  margin-top: 0;
  font-size: 0.8em;
}

body {
  background-color: #fff;
  font-family: 'Poppins', sans-serif;
  font-size: 16px;
  font-weight: 300;
  line-height: 1.6;
  color: #1c1c1c;
}

main {
  padding-top: 60px;
  display: inline-block;
}

img {
  width: 100%;
}

h1,
h2,
h3,
h4 {
  line-height: 1.4;
}

h1 {
  font-size: 2.75em;
  font-weight: 600;
}

h2 {
  font-size: 2.25em;
  font-weight: 600;
}

h3 {
  font-size: 1.25em;
  font-weight: 600;
}

h4 {
  font-size: 1.35em;
  font-weight: 400;
}

span {
  font-weight: 400;
}

ul {
  padding-left: 20px;
}

a.button {
  margin: 20px 0;
}

a {
  color: #1c1c1c;
  text-decoration: none;
}

a:visited {
  color: transparent;
}

a:active {
  color: #00a3bd;
}

.hero {
  background-color: #00a3bd;
  display: inline-block;
  color: black;
  text-align: left;
  width: 100%;
  padding: 1em;
}

.hero h1 span {
  display: block;
  font-weight: 400;
  font-size: 59%;
  margin-top: 1em;
}

.work {
  background-color: transparent;
  color: black;
  text-align: left;
}

.row {
  padding-bottom: 25px;
  border-bottom: 1px solid #7f7f7f;
}

.work .row:last-child {
  padding-bottom: 0;
  border-bottom: none;
}

.row::after {
  content: "";
  clear: both;
  display: table;
}

.contact {
  background-color: #00a3bd;
  color: black;
  padding: 10px 15px 40px;
  text-align: center;
  display: block;
}

.social {
  margin-top: 20px;
  display: flex;
  justify-content: center;
  list-style-type: none;
  width: 100%;
  padding-left: 0;
  text-align: center;
  min-width: 150px;
}

.social .fab {
  font-size: 1.5em;
  margin: 0 10px;
}

.button {
  display: inline-block;
  background-color: #1c1c1c;
  color: #fff;
  font-weight: 400;
  padding: 10px;
  border-radius: 3px;
  transition: 0.2s opacity;
}

.button:visited {
  color: #fff;
}

.button:hover {
  opacity: 0.8;
  text-decoration: none;
}

.button.contact {
  background-color: transparent;
  color: #1c1c1c;
  text-transform: lowercase;
  border: 2px solid #1c1c1c;
  margin-top: 20px;
}

.button.contact:hover {
  background-color: #1c1c1c;
  color: #fff;
}

/* Media Queries */
@media only screen and (min-width: 540px) {
  [class*="col-"] {
    float: left;
  }

  .logo {
    min-width: 200px;
    padding-top: 27px;
  }

  .prototype {
    width: 50%;
    float: left;
    display: block;
    margin-left: auto;
    margin-right: auto;
  }

  .navtoggle li:not(:last-child) {
    display: inline-block;
  }

  .navtoggle li:last-child {
    display: none;
  }

  header {
    text-align: unset;
    padding: 0;
  }

  header .container {
    justify-content: space-between;
    align-items: center;
  }

  nav {
    float: right;
  }

  nav > ul > li {
    display: inline-block;
  }

  nav > ul > li > a {
    padding: 25px 15px;
    font-weight: 600;
    color: #1c1c1c;
    display: block;
    border-top: 5px solid transparent;
  }

  nav > ul > li > a:hover {
    color: #fff;
    text-decoration: none;
    border-top: 5px solid #fff;
  }

  .active {
    border-top: 5px solid #fff;
    color: #fff;
  }

  main {
    padding-top: 80px;
    width: 100%;
  }

  div.col-md-about > div {
    padding-left: 100px;
  }

  .col-md-6 {
    width: 50%;
    padding: 0 10px;
  }

  .col-md-about {
    width: 50%;
    margin-bottom: 2.5em;
  }
}

@media only screen and (min-width: 1024px) {
  .col-lg-7 {
    width: 58.33%;
  }

  .col-lg-5 {
    width: 41.66%;
  }

  .container {
    max-width: 1200px;
    margin-left: auto;
    margin-right: auto;
  }
}

@media only screen and (min-width: 1440px) {
  .col-xl-4 {
    width: 33.33%;
  }
}

/* Animation */
@keyframes color-change {
  from {
    fill: #edc655;
  }

  to {
    fill: #f76414;
  }
}

.sun {
  animation-duration: 4s;
  animation-name: color-change;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}

@keyframes cloud-move {
  from {
    transform: translate(0, 50px);
  }

  to {
    transform: translate(200px, 50px);
  }
}

.cloud-front {
  animation-duration: 30s;
  animation-name: cloud-move;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}

@keyframes cloud-move-reverse {
  from {
    transform: translate(446px, 48px);
  }

  to {
    transform: translate(100px, 48px);
  }
}

.cloud-back {
  animation: 34s cloud-move-reverse infinite alternate linear;
}

/* Animation 2 */

/*
? === === === === === === === === === === === === === === === === ?
?                                                                 ?
?   BIRDS                                                         ?
?                                                                 ?
? === === === === === === === === === === === === === === === === ?
*/
:root {
  /* * Animation variables: */
  --birds-name: birds;

  /*  Specifies a name for the @keyframes animation. */
  --birds-duration: 10s;

  /*  Defines how long an animation should take to complete one cycle. */
  --birds-timing-function: cubic-bezier(0.28, 0.84, 0.42, 1);

  /*  Specifies the speed curve of an animation. */
  --birds-delay: 1s;

  /*  Specifies a delay for the start of an animation. */
  --birds-iteration-count: infinite;

  /*  Specifies the number of times an animation should be played. */
  --birds-direction: normal;

  /*  Defines whether an animation should be played forwards, backwards or in alternate cycles. */
  --birds-fill-mode: forwards;

  /*  Retain the style values from the last keyframe when the animation ends. */
  --birds-play-state: running;

  /*  Specifies whether the animation is running or paused. */

  /* * Animation properties all together: */
  --birds: var(--birds-name) var(--birds-duration) var(--birds-timing-function) var(--birds-delay) var(--birds-iteration-count) var(--birds-fill-mode) var(--birds-play-state);
}

/* Group should stay still: */
#g2 {
  position: absolute;
}

/* Set animations for each browser: */
#birds {
  -webkit-animation: var(--birds);

  /* * Safari, Chrome, Opera */

  -moz-animation: var(--birds);

  /* * Firefox */

  -ms-animation: var(--birds);

  /* * Internet Explorer */

  -o-animation: var(--birds);

  /* * Opera */

  animation: var(--birds);

  /* * Default */

  /* Set initial placement:   valuse = X, Y, Z */

  transform: translate3d(300px, 84px, 0);
  position: relative;
}

@keyframes birds {
  0% {
    transform: translate3d(300px, 84px, 0);
  }

  50% {
    transform: translate3d(300px, 114px, 0);
  }

  100% {
    transform: translate3d(300px, 84px, 0);
  }
}
